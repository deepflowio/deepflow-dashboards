{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 178,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 39,
      "panels": [],
      "title": "tips",
      "type": "row"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 40,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "The following view intuitively presents the internal anomaly metrics of the deepflow-agent and deepflow-server. When a metric has a non-zero value, you can check the `!` at the end of the chart title to understand the cause of the anomaly and how to address it.\n\nSimplified data processing flow for deepflow-server (for more details, see the [GitHub documentation](https://github.com/deepflowio/deepflow/blob/main/docs/design/data-flow.md)):\n```\n[receiver]  -queue-> [decoder] -queue-> [ck-writer]\n```\n\nSimplified data processing flow for deepflow-agent (for more details, see the [GitHub documentation](https://github.com/deepflowio/deepflow/blob/main/docs/design/data-flow.md)):\n```\nAF_PACKET/cBPF data:\n[dispatcher] -----> [flow_map] ---queue-> [quadruple_generator] ---queue-> [collector] -queue-> [sender] (net/app metrics)\n                                |                                `-queue-> [flow_aggr] -queue-> [sender] (flow-log)\n                                `-queue-> [l7_session_aggr] ----------------------------queue-> [sender] (request-log)\n\neBPF data:\n[ebpf_collector] -> [flow_map] ---queue-> [quadruple_generator] -queue-> [collector] -queue-> [sender] (app metrics)\n                                `-queue-> [l7_session_aggr] --------------------------queue-> [sender] (request-log)\n```",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.0",
      "type": "text"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 3,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 12
          },
          "id": 41,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ingester.recviver.metrics.invalid\n\n### Reason: Server discards invalid data received\n\n- A small amount of Invalid: Usually not data sent by deepflow-agent, might be flood traffic in the network\n- A large amount of Invalid: Please check if the versions of deepflow-agent and deepflow-server are consistent\n\n### Resolution: Identify the source of invalid data and handle it\n\nSearch the deepflow-server logs for the `TCP client.*invalid` keyword:\n\n```\n[root@host1 ~]# kubectl -n deepflow logs deepflow-server-cd8bf9fd4-bsg7t | grep \"TCP client.*invalid\"\n2024-04-29 10:25:37.841 [WARN] [receiver] receiver.go:835 TCP client (10.40.50.38:41418) decode error.header type 238 is invalid\n```\n\n- If the source `IP:Port` of the invalid data is deepflow-agent, it should be upgraded\n- If not, consider adding the source to the iptables blacklist to block it\n- For the latter, it usually indicates unexpected broadcast traffic or scanning traffic in the user's network",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 12
          },
          "id": 42,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ingester_decoder.metrics.drop_count\n\n### Reason: Flow_log data exceeds decode rate limit and is actively discarded\n\nThe data decode rate for each deepflow-server replica is set to 50K/s by default. Any data exceeding this rate limit will be actively discarded.\n\nNote that the rate limits for each type of data are independent, each defaulting to 50K/s. The `msg_type` displayed in this metric means:\n- l4_log: Flow logs\n- l7_log: Call logs\n\n### Resolution: Scale out or increase rate limit\n\n- If the CPU/MEM/Load/Disk usage on the server hosting deepflow-server exceeds 70%, consider scaling out\n- If resources are still sufficient, adjust the throttle and other parameters of deepflow-server to increase the rate limit",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## ingester.recviver.metrics.invalid\n\n#### Reason: Server discards invalid data received\n\n- A small amount of Invalid: Usually not data sent by deepflow-agent, might be flood traffic in the network\n- A large amount of Invalid: Please check if the versions of deepflow-agent and deepflow-server are consistent\n\n#### Resolution: Identify the source of invalid data and handle it\n\nSearch the deepflow-server logs for the `TCP client.*invalid` keyword:\n\n```\n[root@host1 ~]# kubectl -n deepflow logs deepflow-server-cd8bf9fd4-bsg7t | grep \"TCP client.*invalid\"\n2024-04-29 10:25:37.841 [WARN] [receiver] receiver.go:835 TCP client (10.40.50.38:41418) decode error.header type 238 is invalid\n```\n\n- If the source `IP:Port` of the invalid data is deepflow-agent, it should be upgraded\n- If not, consider adding the source to the iptables blacklist to block it\n- For the latter, it usually indicates unexpected broadcast traffic or scanning traffic in the user's network",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "id": 7,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_server_ingester_recviver\",\"select\":[{\"key\":\"metrics.invalid\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$server_host\",\"value\":\"server_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"a946306d-a39f-4bdc-3d1e-a92709da741b\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"3cfc2034-c829-9c5f-4b1f-5c1a81d2e515\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.invalid\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.invalid\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.invalid)",
                  "name": "Sum(metrics.invalid)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.invalid`) AS `Sum(metrics.invalid)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_server_ingester_recviver WHERE `tag.host` IN ('metaflow-demo-0') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.invalid`)>='1' ORDER BY `Sum(metrics.invalid)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ingester.recviver.metrics.invalid",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## ingester_decoder.metrics.drop_count\n\n## Reason: Flow_log data exceeds decode rate limit and is actively discarded\n\nThe data decode rate for each deepflow-server replica is set to 50K/s by default. Any data exceeding this rate limit will be actively discarded.\n\nNote that the rate limits for each type of data are independent, each defaulting to 50K/s. The `msg_type` displayed in this metric means:\n- l4_log: Flow logs\n- l7_log: Call logs\n\n## Resolution: Scale out or increase rate limit\n\n- If the CPU/MEM/Load/Disk usage on the server hosting deepflow-server exceeds 70%, consider scaling out\n- If resources are still sufficient, adjust the throttle and other parameters of deepflow-server to increase the rate limit",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.2.3",
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_server_ingester_decoder\",\"select\":[{\"key\":\"metrics.drop_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$server_host\",\"value\":\"server_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"5928e883-5dee-e271-7418-bf71cab80729\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.msg_type\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"value\":\"l4_log\",\"label\":\"l4_log\"},{\"value\":\"l7_log\",\"label\":\"l7_log\"}],\"as\":\"\",\"params\":[],\"uuid\":\"b1d834ca-c3fc-ea16-6621-77d87a625799\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"3d90bffb-11a4-3a5c-113f-7a6cc9434acb\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.msg_type\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"f025ab30-eda5-936b-e3b2-fce0d900b621\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop_count)",
                  "name": "Sum(metrics.drop_count)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.msg_type",
                  "isResource": false,
                  "name": "tag.msg_type"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop_count`) AS `Sum(metrics.drop_count)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.msg_type` FROM deepflow_server_ingester_decoder WHERE `tag.host` IN ('metaflow-demo-0') AND (`tag.msg_type` = 'l4_log' OR `tag.msg_type` = 'l7_log') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host`, `tag.msg_type` HAVING Sum(`metrics.drop_count`)>='1' ORDER BY `Sum(metrics.drop_count)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ingester_decoder.metrics.drop_count",
          "type": "timeseries"
        }
      ],
      "title": "[server.ingester] receiver, decoder",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 25,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "id": 43,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ingester_ckwriter.metrics.write_failed_count\n\n### Reason: Failed to write to ClickHouse\n\nWrite failures are usually caused by ClickHouse service anomalies or insufficient disk space.\n\n### Resolution: Recovery/Scaling/Bug Fix\n\n- Recovery: Fix the ClickHouse service if it is abnormal\n- Scaling: Expand disk space or reduce the amount of data being written if space is insufficient\n- Bug Fix: If the issue is not due to the above reasons, search for `write block failed` in the deepflow-server logs to determine further action",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 11
          },
          "id": 45,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ingester_ckwriter.metrics.write_failed_count\n\n### Reason: Failed to write to ClickHouse\n\nWrite failures are usually caused by ClickHouse service anomalies or insufficient disk space.\n\n### Resolution: Recovery/Scaling/Bug Fix\n\n- Recovery: Fix the ClickHouse service if it is abnormal\n- Scaling: Expand disk space or reduce the amount of data being written if space is insufficient\n- Bug Fix: If the issue is not due to the above reasons, search for `write block failed` in the deepflow-server logs to determine further action",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## ingester_ckwriter.metrics.write_failed_count\n\n## Reason: Failed to write to ClickHouse\n\nWrite failures are usually caused by ClickHouse service anomalies or insufficient disk space.\n\n## Resolution: Recovery/Scaling/Bug Fix\n\n- Recovery: Fix the ClickHouse service if it is abnormal\n- Scaling: Expand disk space or reduce the amount of data being written if space is insufficient\n- Bug Fix: If the issue is not due to the above reasons, search for `write block failed` in the deepflow-server logs to determine further action",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_server_ingester_ckwriter\",\"select\":[{\"key\":\"metrics.write_failed_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"274748d4-5f23-a711-910f-2423820ac142\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$server_host\",\"value\":\"server_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"0784c656-11ac-671e-1428-aab9c1e946b5\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect274748d4-5f23-a711-910f-2423820ac142\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"11137625-2487-1cd6-d375-6af451e7ce7f\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.write_failed_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"274748d4-5f23-a711-910f-2423820ac142\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e3ff2f8b-d93e-1e2a-d52b-2ec74fbc2848\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.name\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"4eee52c2-4939-ec0c-5e4f-116181fde859\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"c171df0b-bcf7-d342-25bb-491da03ba5df\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.write_failed_count\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"274748d4-5f23-a711-910f-2423820ac142\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.write_failed_count)",
                  "name": "Sum(metrics.write_failed_count)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.name",
                  "isResource": false,
                  "name": "tag.name"
                }
              ],
              "sql": "SELECT Sum(`metrics.write_failed_count`) AS `Sum(metrics.write_failed_count)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.name` FROM deepflow_server_ingester_ckwriter WHERE `tag.host` IN ('metaflow-demo-0') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host`, `tag.name` HAVING Sum(`metrics.write_failed_count`)>='1' ORDER BY `Sum(metrics.write_failed_count)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ingester_ckwriter.metrics.write_failed_count",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## ingester_force_delete_clickhouse_data.metrics.bytes_on_disk\n\n## Reason: Insufficient disk space\n\nDue to insufficient disk space, deepflow-server proactively deletes data from ClickHouse to prevent the disk from being filled.\n\n## Resolution: Disk Expansion\n\nIncrease disk space to ensure it can store ClickHouse data for the specified retention period.\n\nIf disk expansion is not possible, go to the `System - Data Nodes - Monitoring Data Storage Configuration` page to adjust the `Retention Period`.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 26,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_server_ingester_force_delete_clickhouse_data\",\"select\":[{\"key\":\"metrics.bytes_on_disk\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$server_host\",\"value\":\"server_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.bytes_on_disk\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.db\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9717b7ec-1c80-e373-8100-279da2243904\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.table\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"87242b58-e75f-6295-6737-f4ce657d52dc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.bytes_on_disk\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.bytes_on_disk)",
                  "name": "Sum(metrics.bytes_on_disk)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.db",
                  "isResource": false,
                  "name": "tag.db"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.table",
                  "isResource": false,
                  "name": "tag.table"
                }
              ],
              "sql": "SELECT Sum(`metrics.bytes_on_disk`) AS `Sum(metrics.bytes_on_disk)`, time(time, $__interval) AS `time_$__interval`, `tag.db`, `tag.host`, `tag.table` FROM deepflow_server_ingester_force_delete_clickhouse_data WHERE `tag.host` = 'metaflow-demo-0' AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.db`, `tag.host`, `tag.table` HAVING Sum(`metrics.bytes_on_disk`)>='1' ORDER BY `Sum(metrics.bytes_on_disk)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ingester_force_delete_clickhoues_data.metrics.bytes_on_disk",
          "type": "timeseries"
        }
      ],
      "title": "[server.ingester] ckwriter, force-delete",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 27,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 14
          },
          "id": 44,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# queue.metrics.overwritten\n\n### Reason: Data loss due to full memory queue\n\nThe deepflow-server process consists of many modules that pass data to each other via memory queues.\n\nWhen the data production rate of the producer module exceeds the consumption rate of the consumer module, data accumulates in the memory queue.\n\nWhen the queue is full, new data from the producer will overwrite the oldest data, resulting in `overwritten`.\n\nThus, the number of overwritten entries represents the amount of data lost.\n\n### Resolution: Scaling/Increasing Queue Length/Increasing Queue Count\n\n- If the CPU/MEM/Load/Disk usage on the server hosting deepflow-server exceeds 70%, consider scaling out\n- Otherwise, refer to the help manual under `diagnose/how-to-profile-deepflow-server-ingester/` to adjust the size and number of specific queues\n\nIncreasing the queue size will directly lead to higher memory usage, while increasing the number of queues implies adding more consumer threads.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## queue.metrics.overwritten\n\n## Reason: Data loss due to full memory queue\n\nThe deepflow-server process consists of many modules that pass data to each other via memory queues.\n\nWhen the data production rate of the producer module exceeds the consumption rate of the consumer module, data accumulates in the memory queue.\n\nWhen the queue is full, new data from the producer will overwrite the oldest data, resulting in `overwritten`.\n\nThus, the number of overwritten entries represents the amount of data lost.\n\n## Resolution: Scaling/Increasing Queue Length/Increasing Queue Count\n\n- If the CPU/MEM/Load/Disk usage on the server hosting deepflow-server exceeds 70%, consider scaling out\n- Otherwise, refer to the help manual under `diagnose/how-to-profile-deepflow-server-ingester/` to adjust the size and number of specific queues\n\nIncreasing the queue size will directly lead to higher memory usage, while increasing the number of queues implies adding more consumer threads.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 22
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_server_queue\",\"select\":[{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"f0872712-806e-393f-267c-91943591cdea\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$server_host\",\"value\":\"server_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"7d7b4e5a-57fc-7f9c-fcfc-1b48c87b506d\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelectf0872712-806e-393f-267c-91943591cdea\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"3b8d6e39-376c-5913-a4c6-91012b16bcf9\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]},\"fromSelect\":{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"f0872712-806e-393f-267c-91943591cdea\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"351d74ce-9e4f-f17d-3cff-061de49dd585\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.module\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"42e035ef-93a7-b684-30c8-98283d755017\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"3d73b928-6b55-b657-6978-9ee188da497e\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"f0872712-806e-393f-267c-91943591cdea\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.overwritten)",
                  "name": "Sum(metrics.overwritten)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.module",
                  "isResource": false,
                  "name": "tag.module"
                }
              ],
              "sql": "SELECT Sum(`metrics.overwritten`) AS `Sum(metrics.overwritten)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.module` FROM deepflow_server_queue WHERE `tag.host` IN ('metaflow-demo-0') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host`, `tag.module` HAVING Sum(`metrics.overwritten`)>='1' ORDER BY `Sum(metrics.overwritten)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "Ingester Queue Overwritten",
          "type": "timeseries"
        }
      ],
      "title": "[server.queue] in-memory queue",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 23,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "id": 46,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# dispatcher.metrics.kernel_drops\n\n### Reason: Traffic surges or insufficient capture performance\n\nThe deepflow-agent collects traffic from the network card using AF_PACKET/cBPF, but traffic surges can cause packet loss.\nAdditionally, if the traffic volume remains high and exceeds the processing capacity of deepflow-agent, continuous packet loss may occur.\n\n### Resolution: Increase buffer size and more\n\nAdjust the following agent configurations to help reduce packet loss:\n- `capture_packet_size`: The default capture packet size is 64KB. If there is no need for traffic distribution, this value can be reduced to match `l7_log_packet_size`.\n- `max_cpus`: The agent is limited to using a maximum of 1 vCPU by default. If CPU usage has reached its threshold, consider increasing this limit.\n- `afpacket-blocks`: The default buffer size is `MIN(max_memory/16, 128MB)`. Increasing this value can help handle traffic surges.\n- Disable unnecessary features to help reduce packet loss.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "id": 47,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# dispatcher.metrics.get_token_failed\n\n### Reason: Reached collection rate limit\n\nHigh traffic rates can trigger the OOM Killer in deepflow-agent. Therefore, the collection rate is limited by default.\n\nWhen the rate limit is reached, in addition to this metric, the agent will also enter an abnormal state of `Collection Packet Rate Limit Reached` (`RX_PPS_THRESHOLD_EXCEEDED`), triggering an alert.\n\n### Resolution: Increase collection packet rate limit in collector configuration\n\nCorresponding Yaml configuration: `max_collect_pps`, default is 200Kpps.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## dispatcher.metrics.kernel_drops\n\n## Reason: Traffic surges or insufficient capture performance\n\nThe deepflow-agent collects traffic from the network card using AF_PACKET/cBPF, but traffic surges can cause packet loss.\nAdditionally, if the traffic volume remains high and exceeds the processing capacity of deepflow-agent, continuous packet loss may occur.\n\n## Resolution: Increase buffer size and more\n\nAdjust the following agent configurations to help reduce packet loss:\n- `capture_packet_size`: The default capture packet size is 64KB. If there is no need for traffic distribution, this value can be reduced to match `l7_log_packet_size`.\n- `max_cpus`: The agent is limited to using a maximum of 1 vCPU by default. If CPU usage has reached its threshold, consider increasing this limit.\n- `afpacket-blocks`: The default buffer size is `MIN(max_memory/16, 128MB)`. Increasing this value can help handle traffic surges.\n- Disable unnecessary features to help reduce packet loss.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 22
          },
          "id": 19,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_dispatcher\",\"select\":[{\"key\":\"metrics.kernel_drops\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"ee2b4ecc-8d63-6280-0c9e-11bc7124139b\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"a0b4a0c6-f5fb-5a8e-b527-cd3460c28e73\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kernel_drops\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kernel_drops\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.kernel_drops)",
                  "name": "Sum(metrics.kernel_drops)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.kernel_drops`) AS `Sum(metrics.kernel_drops)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_dispatcher WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.kernel_drops`)>='1' ORDER BY `Sum(metrics.kernel_drops)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "dispatcher.metrics.kernel_drops",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## dispatcher.metrics.get_token_failed\n\n## Reason: Reached collection rate limit\n\nHigh traffic rates can trigger the OOM Killer in deepflow-agent. Therefore, the collection rate is limited by default.\n\nWhen the rate limit is reached, in addition to this metric, the agent will also enter an abnormal state of `Collection Packet Rate Limit Reached` (`RX_PPS_THRESHOLD_EXCEEDED`), triggering an alert.\n\n## Resolution: Increase collection packet rate limit in collector configuration\n\nCorresponding Yaml configuration: `max_collect_pps`, default is 200Kpps.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 22
          },
          "id": 28,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_dispatcher\",\"select\":[{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"ee2b4ecc-8d63-6280-0c9e-11bc7124139b\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"a0b4a0c6-f5fb-5a8e-b527-cd3460c28e73\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.get_token_failed)",
                  "name": "Sum(metrics.get_token_failed)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.get_token_failed`) AS `Sum(metrics.get_token_failed)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_dispatcher WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.get_token_failed`)>='1' ORDER BY `Sum(metrics.get_token_failed)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "dispatcher.metrics.get_token_failed",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 31
          },
          "id": 48,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# dispatcher.metrics.invalid_packets\n\n### Reason: Packet length too short\n\nThis alert is triggered when the packet length is less than 18 bytes. It can also be caused by insufficient length after tunnel parsing.\n\n### Resolution: Disable tunnel parsing\n\nIf it is confirmed that incorrect tunnel parsing is the cause, modify the collector configuration to set `tunnel decapsulation type` to empty to avoid this issue.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 31
          },
          "id": 49,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# dispatcher.metrics.err\n\n### Reason: Network card driver issue\n\nThis is typically caused by the network card driver and occurs very rarely.\n\n### Resolution: Restart the network card\n\nExecute `ifconfig $nic down; ifconfig $nic up` on the server where the collector is running.\n\n<mark>Note: This is a high-risk operation.</mark>",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## dispatcher.metrics.invalid_packets\n\n## Reason: Packet length too short\n\nThis alert is triggered when the packet length is less than 18 bytes. It can also be caused by insufficient length after tunnel parsing.\n\n## Resolution: Disable tunnel parsing\n\nIf it is confirmed that incorrect tunnel parsing is the cause, modify the collector configuration to set `tunnel decapsulation type` to empty to avoid this issue.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 38
          },
          "id": 11,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_dispatcher\",\"select\":[{\"key\":\"metrics.invalid_packets\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"ee2b4ecc-8d63-6280-0c9e-11bc7124139b\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"a0b4a0c6-f5fb-5a8e-b527-cd3460c28e73\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.invalid_packets\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.invalid_packets\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.invalid_packets)",
                  "name": "Sum(metrics.invalid_packets)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.invalid_packets`) AS `Sum(metrics.invalid_packets)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_dispatcher WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.invalid_packets`)>='1' ORDER BY `Sum(metrics.invalid_packets)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "dispatcher.metrics.invalid_packets",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## dispatcher.metrics.err\n\n## Reason: Network card driver issue\n\nThis is typically caused by the network card driver and occurs very rarely.\n\n## Resolution: Restart the network card\n\nExecute `ifconfig $nic down; ifconfig $nic up` on the server where the collector is running.\n\n<mark>Note: This is a high-risk operation.</mark>",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 38
          },
          "id": 20,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_dispatcher\",\"select\":[{\"key\":\"metrics.err\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"ee2b4ecc-8d63-6280-0c9e-11bc7124139b\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"a0b4a0c6-f5fb-5a8e-b527-cd3460c28e73\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.err\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.err\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.err)",
                  "name": "Sum(metrics.err)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.err`) AS `Sum(metrics.err)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_dispatcher WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.err`)>='1' ORDER BY `Sum(metrics.err)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "dispatcher.metrics.err",
          "type": "timeseries"
        }
      ],
      "title": "[agent.dispatcher] AF_PACKET/cBPF collector",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 22,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 16
          },
          "id": 50,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ebpf_collector.metrics.kern_lost\n\n### Reason: eBPF perf buffer full\n\nData exchange between the eBPF kernel (producer) and user-space perf-reader (consumer) uses the perf buffer.\n\n### Resolution: Adjust Agent configuration\n\n- Adjust perf buffer size: Increase the buffer size by adjusting the Agent's `ebpf`.`perf-pages-count`.\n- Increase thread count: Adjust the Agent's `ebpf`.`thread-num`, which represents the number of consumer threads. Note that this will increase CPU and memory usage.\n- Disable Golang uprobe: Currently, enabling Golang uprobe significantly increases perf buffer consumption, especially when using uprobe to collect HTTP2 protocol data.\n\nHowever, disabling Golang uprobe will also disable distributed tracing and HTTPS protocol collection for that process, which may not be practical at the moment. Improvements are planned for future versions.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 16
          },
          "id": 51,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ebpf_collector.metrics.kern_lost\n\n### Reason: eBPF perf buffer full\n\nData exchange between the eBPF kernel (producer) and user-space perf-reader (consumer) uses the perf buffer.\n\n### Resolution: Adjust Agent configuration\n\n- Adjust perf buffer size: Increase the buffer size by adjusting the Agent's `ebpf`.`perf-pages-count`.\n- Increase thread count: Adjust the Agent's `ebpf`.`thread-num`, which represents the number of consumer threads. Note that this will increase CPU and memory usage.\n- Disable Golang uprobe: Currently, enabling Golang uprobe significantly increases perf buffer consumption, especially when using uprobe to collect HTTP2 protocol data.\n\nHowever, disabling Golang uprobe will also disable distributed tracing and HTTPS protocol collection for that process, which may not be practical at the moment. Improvements are planned for future versions.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 16
          },
          "id": 52,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# ebpf_collector.metrics.get_token_failed\n\n### Reason: Reached collection rate limit\n\nHigh traffic rates can trigger the OOM Killer in deepflow-agent. Therefore, the collection rate is limited by default.\n\nWhen the rate limit is reached, in addition to this metric, the agent will also enter an abnormal state of `Collection Packet Rate Limit Reached` (`RX_PPS_THRESHOLD_EXCEEDED`), triggering an alert.\n\n### Resolution: Increase collection packet rate limit in collector configuration\n\nCorresponding Yaml configuration: `global-ebpf-pps-threshold`, default is 0, meaning no rate limit.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## ebpf_collector.metrics.kern_lost\n\n## Reason: eBPF perf buffer full\n\nData exchange between the eBPF kernel (producer) and user-space perf-reader (consumer) uses the perf buffer.\n\n## Resolution: Adjust Agent configuration\n\n- Adjust perf buffer size: Increase the buffer size by adjusting the Agent's `ebpf`.`perf-pages-count`.\n- Increase thread count: Adjust the Agent's `ebpf`.`thread-num`, which represents the number of consumer threads. Note that this will increase CPU and memory usage.\n- Disable Golang uprobe: Currently, enabling Golang uprobe significantly increases perf buffer consumption, especially when using uprobe to collect HTTP2 protocol data.\n\nHowever, disabling Golang uprobe will also disable distributed tracing and HTTPS protocol collection for that process, which may not be practical at the moment. Improvements are planned for future versions.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 24
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_ebpf_collector\",\"select\":[{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"5e8c7e09-42d5-cfaf-4b06-51ed4dd822d2\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"8dd1cf2f-4985-dd74-7315-348393e2cb1b\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.kern_lost)",
                  "name": "Sum(metrics.kern_lost)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.kern_lost`) AS `Sum(metrics.kern_lost)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_ebpf_collector WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.kern_lost`)>='1' ORDER BY `Sum(metrics.kern_lost)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ebpf_collector.metrics.kern_lost",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## ebpf_collector.metrics.kern_lost\n\n## Reason: eBPF perf buffer full\n\nData exchange between the eBPF kernel (producer) and user-space perf-reader (consumer) uses the perf buffer.\n\n## Resolution: Adjust Agent configuration\n\n- Adjust perf buffer size: Increase the buffer size by adjusting the Agent's `ebpf`.`perf-pages-count`.\n- Increase thread count: Adjust the Agent's `ebpf`.`thread-num`, which represents the number of consumer threads. Note that this will increase CPU and memory usage.\n- Disable Golang uprobe: Currently, enabling Golang uprobe significantly increases perf buffer consumption, especially when using uprobe to collect HTTP2 protocol data.\n\nHowever, disabling Golang uprobe will also disable distributed tracing and HTTPS protocol collection for that process, which may not be practical at the moment. Improvements are planned for future versions.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 24
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_ebpf_collector\",\"select\":[{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"5e8c7e09-42d5-cfaf-4b06-51ed4dd822d2\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"8dd1cf2f-4985-dd74-7315-348393e2cb1b\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.kern_lost\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.kern_lost)",
                  "name": "Sum(metrics.kern_lost)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.kern_lost`) AS `Sum(metrics.kern_lost)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_ebpf_collector WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.kern_lost`)>='1' ORDER BY `Sum(metrics.kern_lost)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ebpf_collector.metrics.kern_lost",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## ebpf_collector.metrics.get_token_failed\n\n## Reason: Reached collection rate limit\n\nHigh traffic rates can trigger the OOM Killer in deepflow-agent. Therefore, the collection rate is limited by default.\n\nWhen the rate limit is reached, in addition to this metric, the agent will also enter an abnormal state of `Collection Packet Rate Limit Reached` (`RX_PPS_THRESHOLD_EXCEEDED`), triggering an alert.\n\n## Resolution: Increase collection packet rate limit in collector configuration\n\nCorresponding Yaml configuration: `global-ebpf-pps-threshold`, default is 0, meaning no rate limit.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 33
          },
          "id": 12,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_ebpf_collector\",\"select\":[{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"5e8c7e09-42d5-cfaf-4b06-51ed4dd822d2\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"8dd1cf2f-4985-dd74-7315-348393e2cb1b\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.get_token_failed\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.get_token_failed)",
                  "name": "Sum(metrics.get_token_failed)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.get_token_failed`) AS `Sum(metrics.get_token_failed)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_ebpf_collector WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.get_token_failed`)>='1' ORDER BY `Sum(metrics.get_token_failed)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "ebpf_collector.metrics.get_token_failed",
          "type": "timeseries"
        }
      ],
      "title": "[agent.ebpf_collector] eBPF collector",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 31,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 7
          },
          "id": 53,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# flow_map.metrics.drop_by_capacity\n\n### Reason: Flow log output rate limit reached\n\nBefore being sent, flow logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending flow logs at too high a rate.\n\n### Resolution: Consider adjusting the rate limit\n\nIf the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l4_log_collect_nps_threshold`.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 7
          },
          "id": 54,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# flow_map.metrics.drop_by_window\n\n### Reason: Packet timestamp too delayed\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n### Resolution: Increase the delay tolerance of the Flow hash table\n\nIncrease the `packet-delay` setting in the advanced collector configuration to enhance the delay tolerance of the Flow hash table.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## flow_map.metrics.drop_by_capacity\n\n## Reason: Flow log output rate limit reached\n\nBefore being sent, flow logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending flow logs at too high a rate.\n\n## Resolution: Consider adjusting the rate limit\n\nIf the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l4_log_collect_nps_threshold`.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "id": 29,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_flow_map\",\"select\":[{\"key\":\"metrics.drop_by_capacity\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop_by_capacity\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]},\"fromSelect\":{\"key\":\"metrics.drop_by_capacity\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop_by_capacity)",
                  "name": "Sum(metrics.drop_by_capacity)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop_by_capacity`) AS `Sum(metrics.drop_by_capacity)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_flow_map WHERE (`tag.host` = 'deepflow-ce-cloud-demo-1-W2' OR `tag.host` = 'metaflow-demo-0-V1' OR `tag.host` = 'metaflow-demo-1-V3' OR `tag.host` = 'metaflow-demo-2-V2' OR `tag.host` = 'deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.drop_by_capacity`)>='1' ORDER BY `Sum(metrics.drop_by_capacity)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "flow_map.metrics.drop_by_capacity",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## flow_map.metrics.drop_by_window\n\n## Reason: Packet timestamp too delayed\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n## Resolution: Increase the delay tolerance of the Flow hash table\n\nIncrease the `packet-delay` setting in the advanced collector configuration to enhance the delay tolerance of the Flow hash table.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "id": 32,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_flow_map\",\"select\":[{\"key\":\"metrics.drop_by_window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop_by_window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]},\"fromSelect\":{\"key\":\"metrics.drop_by_window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop_by_window)",
                  "name": "Sum(metrics.drop_by_window)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop_by_window`) AS `Sum(metrics.drop_by_window)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_flow_map WHERE (`tag.host` = 'deepflow-ce-cloud-demo-1-W2' OR `tag.host` = 'metaflow-demo-0-V1' OR `tag.host` = 'metaflow-demo-1-V3' OR `tag.host` = 'metaflow-demo-2-V2' OR `tag.host` = 'deepflow-ce-cloud-demo-0-W1') AND time>=1717450079 AND time<=1717471679 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.drop_by_window`)>='1' ORDER BY `Sum(metrics.drop_by_window)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "flow_map.metrics.drop_by_window",
          "type": "timeseries"
        }
      ],
      "title": "[agent.flow_map] flow hashmap",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 33,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 18
          },
          "id": 56,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# quadruple_generator.metrics.drop-before-window\n\n### Reason: Flow log timestamp too delayed during metric `pre`-aggregation\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n### Resolution: Increase the delay tolerance of the `pre`-aggregation module\n\nAdjust the delay tolerance of the pre-aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## quadruple_generator.metrics.drop-before-window\n\n## Reason: Flow log timestamp too delayed during metric `pre`-aggregation\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n## Resolution: Increase the delay tolerance of the `pre`-aggregation module\n\nAdjust the delay tolerance of the pre-aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 36,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_quadruple_generator\",\"select\":[{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.kind\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"f4738c1d-5355-bff9-62ac-e25d2cc5b0b3\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop-before-window)",
                  "name": "Sum(metrics.drop-before-window)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.kind",
                  "isResource": false,
                  "name": "tag.kind"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop-before-window`) AS `Sum(metrics.drop-before-window)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.kind` FROM deepflow_agent_quadruple_generator WHERE (`tag.host` = 'deepflow-ce-cloud-demo-1-W2' OR `tag.host` = 'metaflow-demo-0-V1' OR `tag.host` = 'metaflow-demo-1-V3' OR `tag.host` = 'metaflow-demo-2-V2' OR `tag.host` = 'deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.kind` HAVING Sum(`metrics.drop-before-window`)>='1' ORDER BY `Sum(metrics.drop-before-window)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "flow_map.metrics.drop_by_capacity",
          "type": "timeseries"
        }
      ],
      "title": "[agent.quadruple_generator] metrics pre-aggregator",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 35,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "id": 57,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# flow_aggr.metrics.drop-in-throttle\n\n### Reason: Flow log output rate limit reached\n\nBefore being sent, flow logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending flow logs at too high a rate.\n\n### Resolution: Consider adjusting the rate limit\n\nIf the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l4_log_collect_nps_threshold`.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 58,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# flow_aggr.metrics.drop-before-window\n\n### Reason: Flow log timestamp too delayed\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n### Resolution: Increase the delay tolerance of flow log aggregation\n\nAdjust the delay tolerance of the flow log aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## flow_aggr.metrics.drop-in-throttle\n\n## Reason: Flow log output rate limit reached\n\nBefore being sent, flow logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending flow logs at too high a rate.\n\n## Resolution: Consider adjusting the rate limit\n\nIf the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l4_log_collect_nps_threshold`.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "id": 14,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_flow_aggr\",\"select\":[{\"key\":\"metrics.drop-in-throttle\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"987409de-f54b-2478-36a2-ed38087f2f91\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"64c55206-b806-0c9b-e7dd-b7b4cfc6b0bb\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-in-throttle\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-in-throttle\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"20\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop-in-throttle)",
                  "name": "Sum(metrics.drop-in-throttle)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop-in-throttle`) AS `Sum(metrics.drop-in-throttle)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_flow_aggr WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.drop-in-throttle`)>='1' ORDER BY `Sum(metrics.drop-in-throttle)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "flow_aggr.metrics.drop-in-throttle",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## flow_aggr.metrics.drop-before-window\n\n## Reason: Flow log timestamp too delayed\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n## Resolution: Increase the delay tolerance of flow log aggregation\n\nAdjust the delay tolerance of the flow log aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 27
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_collector\",\"select\":[{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"73dd0817-a339-633a-4712-7e49c127e119\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"2b447d7d-002f-4a58-ef76-627ce82e382a\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.kind\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"8cbd2637-3a20-a384-cd6f-5f57c60d47eb\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop-before-window)",
                  "name": "Sum(metrics.drop-before-window)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.kind",
                  "isResource": false,
                  "name": "tag.kind"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop-before-window`) AS `Sum(metrics.drop-before-window)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.kind` FROM deepflow_agent_collector WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.kind` HAVING Sum(`metrics.drop-before-window`)>='1' ORDER BY `Sum(metrics.drop-before-window)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "flow_aggr.metrics.drop-before-window",
          "type": "timeseries"
        }
      ],
      "title": "[agent.flow_aggr] flow_log aggregator",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 37,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 20
          },
          "id": 59,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# l7_session_aggr.metrics.throttle-drop\n\n### Reason: Call log output rate limit reached\n\nBefore being sent, call logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending logs at too high a rate.\n\n### Resolution: Consider adjusting the rate limit or reducing call logs\n\n1. If the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l7_log_collect_nps_threshold`.\n2. Adjust the `l7-protocol-enabled` configuration item to disable parsing of application protocols you are not interested in.\n3. For some protocols (e.g., Redis) with weak signatures, if many incorrect parsings are found, adjust `l7-protocol-ports` to limit the port numbers for which the protocol is attempted to be parsed.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## l7_session_aggr.metrics.throttle-drop\n\n## Reason: Call log output rate limit reached\n\nBefore being sent, call logs pass through a rate-limiting module to prevent the agent from consuming excessive bandwidth by sending logs at too high a rate.\n\n## Resolution: Consider adjusting the rate limit or reducing call logs\n\n1. If the agent has sufficient CPU, memory, and bandwidth resources, consider increasing the rate limit by adjusting `l7_log_collect_nps_threshold`.\n2. Adjust the `l7-protocol-enabled` configuration item to disable parsing of application protocols you are not interested in.\n3. For some protocols (e.g., Redis) with weak signatures, if many incorrect parsings are found, adjust `l7-protocol-ports` to limit the port numbers for which the protocol is attempted to be parsed.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 28
          },
          "id": 38,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_l7_session_aggr\",\"select\":[{\"key\":\"metrics.throttle-drop\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]},\"fromSelect\":{\"key\":\"metrics.throttle-drop\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.throttle-drop\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.throttle-drop)",
                  "name": "Sum(metrics.throttle-drop)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                }
              ],
              "sql": "SELECT Sum(`metrics.throttle-drop`) AS `Sum(metrics.throttle-drop)`, time(time, $__interval) AS `time_$__interval`, `tag.host` FROM deepflow_agent_l7_session_aggr WHERE (`tag.host` = 'deepflow-ce-cloud-demo-1-W2' OR `tag.host` = 'metaflow-demo-0-V1' OR `tag.host` = 'metaflow-demo-1-V3' OR `tag.host` = 'metaflow-demo-2-V2' OR `tag.host` = 'deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host` HAVING Sum(`metrics.throttle-drop`)>='1' ORDER BY `Sum(metrics.throttle-drop)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "l7_session_aggr.metrics.throttle-drop",
          "type": "timeseries"
        }
      ],
      "title": "[agent.l7_session_aggr] request_log aggregator",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 34,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 21
          },
          "id": 60,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# collector.metrics.drop-inactive\n\n### Reason: Both client and server are Internet IPs or inactive IPs\n\nThis usually occurs because the IP addresses of both ends of the communication appear in the `Network Resources - IP Addresses/Subnets` list.\n\nDeepFlow automatically syncs the IP addresses and subnets of cloud resources and container resources. Additionally, it considers `10/8, 172.16/12, 192.168/16, 169.254/16` as internal network segments.\n\nIf the IP addresses in the agent's operating environment do not appear in the above IPs or subnets, they will be marked as Internet.\n\n### Resolution: Add the IPs you need to monitor as network resources\n\nEnter `is_internet = true` in the flow log search bar to find traffic where both ends are marked as Internet.\n\nAdd the IP segments you wish to monitor to the `Resources - Network Resources - Subnets` to avoid this alert and obtain more detailed metric data.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "title": "Panel Title",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 61,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# collector.metrics.drop-before-window\n\n### Reason: Flow log timestamp too delayed during metric aggregation\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n### Resolution: Increase the delay tolerance of the aggregation module\n\nAdjust the delay tolerance of the aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "title": "Panel Title",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## collector.metrics.drop-inactive\n\n## Reason: Both client and server are Internet IPs or inactive IPs\n\nThis usually occurs because the IP addresses of both ends of the communication appear in the `Network Resources - IP Addresses/Subnets` list.\n\nDeepFlow automatically syncs the IP addresses and subnets of cloud resources and container resources. Additionally, it considers `10/8, 172.16/12, 192.168/16, 169.254/16` as internal network segments.\n\nIf the IP addresses in the agent's operating environment do not appear in the above IPs or subnets, they will be marked as Internet.\n\n## Resolution: Add the IPs you need to monitor as network resources\n\nEnter `is_internet = true` in the flow log search bar to find traffic where both ends are marked as Internet.\n\nAdd the IP segments you wish to monitor to the `Resources - Network Resources - Subnets` to avoid this alert and obtain more detailed metric data.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 29
          },
          "id": 9,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_collector\",\"select\":[{\"key\":\"metrics.drop-inactive\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"73dd0817-a339-633a-4712-7e49c127e119\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"2b447d7d-002f-4a58-ef76-627ce82e382a\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-inactive\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.kind\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"8cbd2637-3a20-a384-cd6f-5f57c60d47eb\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-inactive\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop-inactive)",
                  "name": "Sum(metrics.drop-inactive)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.kind",
                  "isResource": false,
                  "name": "tag.kind"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop-inactive`) AS `Sum(metrics.drop-inactive)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.kind` FROM deepflow_agent_collector WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.kind` HAVING Sum(`metrics.drop-inactive`)>='1' ORDER BY `Sum(metrics.drop-inactive)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "collector.metrics.drop-inactive",
          "type": "timeseries"
        },
        {
          "datasource": "$datasource",
          "description": "## collector.metrics.drop-before-window\n\n## Reason: Flow log timestamp too delayed during metric aggregation\n\nPossible reasons:\n- There is a significant time difference when AF_PACKET/cBPF captures the packet.\n- Excessive internal processing time within deepflow-agent, usually occurring under very high traffic conditions.\n\n## Resolution: Increase the delay tolerance of the aggregation module\n\nAdjust the delay tolerance of the aggregation window:\n- Increase the `packet-delay` setting in the advanced collector configuration\n- Increase the `second-flow-extra-delay-second` setting in the advanced collector configuration",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 29
          },
          "id": 15,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_collector\",\"select\":[{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"LIKE\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"f5099106-38a9-acbb-955b-7e265c486733\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelecte921de54-5352-b025-809c-981f48abeeec\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"e8bd8ac3-f370-dcf4-cad4-cb13f28d9a4e\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"b868df9e-3e12-0416-91fc-ccbca046573f\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.kind\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"48fe2531-35c9-7bb8-c61b-5c969efc342a\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a3c05fd9-fd6c-0164-06ab-46f7806b6e51\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.drop-before-window\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e921de54-5352-b025-809c-981f48abeeec\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.drop-before-window)",
                  "name": "Sum(metrics.drop-before-window)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.kind",
                  "isResource": false,
                  "name": "tag.kind"
                }
              ],
              "sql": "SELECT Sum(`metrics.drop-before-window`) AS `Sum(metrics.drop-before-window)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.kind` FROM deepflow_agent_collector WHERE (`tag.host` = 'deepflow-ce-cloud-demo-1-W2' OR `tag.host` = 'metaflow-demo-0-V1' OR `tag.host` = 'metaflow-demo-1-V3' OR `tag.host` = 'metaflow-demo-2-V2' OR `tag.host` = 'deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.kind` HAVING Sum(`metrics.drop-before-window`)>='1' ORDER BY `Sum(metrics.drop-before-window)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "collector.metrics.drop-before-window",
          "type": "timeseries"
        }
      ],
      "title": "[agent.collector] metrics aggregator",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 2,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 12
          },
          "id": 62,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# collect_sender.metrics.dropped\n\n### Reason: Agent failed to send data to Server\n\nThis includes sending statistics, monitoring, and log data.\n\n### Resolution: Troubleshoot using the following methods\n\n- On the controller, execute `deepflow-ctl trisolaris.check --cip $ip --cmac $mac config | grep analyzer_ip` to check if the assigned data node IP is correct.\n- On the controller, execute `deepflow-agent-ctl -a $ip -p $port rpc --get config | grep analyzer_ip` to check if the distributed data node IP is correct.\n- On the controller, execute `deepflow-agent-ctl -a $ip -p $port rpc --get config | grep socket_type` to confirm the type of communication port. `0` indicates UDP, `1` indicates TCP.\n- On the corresponding data node, check if the port is listening properly: `netstat -anp | grep 20033` or `netstat -anp | grep 30033`.\n- If the communication port is in TCP mode, use `telnet` on the server where the Agent is located to confirm whether the port can be accessed normally.\n- If the communication port is in UDP mode, check the Agent logs for `Socket send failed`, which may indicate a sudden network interruption.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## collect_sender.metrics.dropped\n\n## Reason: Agent failed to send data to Server\n\nThis includes sending statistics, monitoring, and log data.\n\n## Resolution: Troubleshoot using the following methods\n\n- On the controller, execute `deepflow-ctl trisolaris.check --cip $ip --cmac $mac config | grep analyzer_ip` to check if the assigned data node IP is correct.\n- On the controller, execute `deepflow-agent-ctl -a $ip -p $port rpc --get config | grep analyzer_ip` to check if the distributed data node IP is correct.\n- On the controller, execute `deepflow-agent-ctl -a $ip -p $port rpc --get config | grep socket_type` to confirm the type of communication port. `0` indicates UDP, `1` indicates TCP.\n- On the corresponding data node, check if the port is listening properly: `netstat -anp | grep 20033` or `netstat -anp | grep 30033`.\n- If the communication port is in TCP mode, use `telnet` on the server where the Agent is located to confirm whether the port can be accessed normally.\n- If the communication port is in UDP mode, check the Agent logs for `Socket send failed`, which may indicate a sudden network interruption.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 20
          },
          "id": 8,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_collect_sender\",\"select\":[{\"key\":\"metrics.dropped\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"a370982e-1c78-c00a-afd5-df75d5df5853\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"dd979e10-7822-20d2-2360-653d785a8c39\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.dropped\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.type\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"e13512ee-ce5d-e3de-ad15-a46ffdd7012f\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.dropped\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.dropped)",
                  "name": "Sum(metrics.dropped)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.type",
                  "isResource": false,
                  "name": "tag.type"
                }
              ],
              "sql": "SELECT Sum(`metrics.dropped`) AS `Sum(metrics.dropped)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.type` FROM deepflow_agent_collect_sender WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.type` HAVING Sum(`metrics.dropped`)>='1' ORDER BY `Sum(metrics.dropped)` desc SLIMIT 20 LIMIT 10000"
            }
          ],
          "title": "collect_sender.metrics.dropped",
          "type": "timeseries"
        }
      ],
      "title": "[agent.sender] data sender",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 24,
      "panels": [
        {
          "datasource": "$datasource",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 55,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "# queue.metrics.overwritten\n\n### Reason: Data loss due to full memory queue\n\nThe deepflow-agent process consists of many modules that pass data between each other using memory queues.\n\nWhen the rate at which the producer module puts data into the queue exceeds the rate at which the consumer module takes data out, the data is buffered in the memory queue.\n\nWhen the queue becomes full, new data from the producer will overwrite the oldest data, resulting in `overwritten`.\n\nTherefore, the number of overwritten items represents the number of data losses.\n\n### Resolution: Expand/increase queue length/increase the number of queues\n\n- If the CPU/MEM usage of the deepflow-agent is already near the threshold, adjusting the queue is not recommended.\n- Otherwise, refer to the help manual under `Troubleshooting/Enterprise Edition Maintenance/Collector Alerts` to adjust the size and number of specific queues.\n\nIncreasing the queue size will directly lead to higher memory usage, and increasing the number of queues means adding more consumer concurrent threads.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "type": "text"
        },
        {
          "datasource": "$datasource",
          "description": "## queue.metrics.overwritten\n\n## Reason: Data loss due to full memory queue\n\nThe deepflow-agent process consists of many modules that pass data between each other using memory queues.\n\nWhen the rate at which the producer module puts data into the queue exceeds the rate at which the consumer module takes data out, the data is buffered in the memory queue.\n\nWhen the queue becomes full, new data from the producer will overwrite the oldest data, resulting in `overwritten`.\n\nTherefore, the number of overwritten items represents the number of data losses.\n\n## Resolution: Expand/increase queue length/increase the number of queues\n\n- If the CPU/MEM usage of the deepflow-agent is already near the threshold, adjusting the queue is not recommended.\n- Otherwise, refer to the help manual under `Troubleshooting/Enterprise Edition Maintenance/Collector Alerts` to adjust the size and number of specific queues.\n\nIncreasing the queue size will directly lead to higher memory usage, and increasing the number of queues means adding more consumer concurrent threads.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 21
          },
          "id": 16,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "$datasource",
              "debug": false,
              "metaExtra": {},
              "queryText": "{\"appType\":\"trafficQuery\",\"db\":\"deepflow_system\",\"sources\":\"\",\"from\":\"deepflow_agent_queue\",\"select\":[{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}}],\"where\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"IN\",\"val\":[{\"label\":\"$agent_host\",\"value\":\"agent_host\",\"isVariable\":true,\"variableType\":\"query\"}],\"as\":\"\",\"params\":[],\"uuid\":\"fa502de9-a80b-f5f5-b557-39a00daad074\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"having\":[{\"key\":\"fromSelect093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"func\":\"Sum\",\"op\":\">=\",\"val\":\"1\",\"as\":\"\",\"params\":[],\"uuid\":\"3ce25e15-da7f-9e90-d938-ab48efbe097c\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"groupBy\":[{\"key\":\"tag.host\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"9a75cd41-d76c-3869-1f28-e40d90f802a1\",\"type\":\"tag\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false},{\"type\":\"tag\",\"key\":\"tag.module\",\"func\":\"\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"a30822b3-4161-20d2-59c5-4f453015433f\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false}],\"orderBy\":[{\"key\":\"fromSelect0\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"6b81c4c4-cbc4-44b6-f8d5-ad8b266b4fe5\",\"type\":\"metric\",\"sort\":\"desc\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"fromSelect\":{\"key\":\"metrics.overwritten\",\"func\":\"Sum\",\"op\":\"\",\"val\":\"\",\"as\":\"\",\"params\":[],\"uuid\":\"093f5358-c5b1-0e5f-68e5-70db03c5a296\",\"type\":\"metric\",\"subFuncs\":[],\"whereOnly\":false,\"isResourceType\":false,\"isIpType\":false,\"cache\":{\"func\":\"Sum\",\"params\":[]}},\"cache\":{\"func\":\"Sum\",\"params\":[],\"subFuncs\":[]}}],\"interval\":\"$__interval\",\"slimit\":\"100\",\"limit\":\"10000\",\"offset\":\"\",\"formatAs\":\"timeSeries\",\"alias\":\"\",\"showMetrics\":-1,\"tracingId\":null}",
              "refId": "A",
              "returnMetrics": [
                {
                  "displayName": "Sum(metrics.overwritten)",
                  "name": "Sum(metrics.overwritten)",
                  "type": 1,
                  "unit": ""
                }
              ],
              "returnTags": [
                {
                  "displayName": "time_$__interval",
                  "isResource": false,
                  "name": "`time_$__interval`"
                },
                {
                  "displayName": "tag.host",
                  "isResource": false,
                  "name": "tag.host"
                },
                {
                  "displayName": "tag.module",
                  "isResource": false,
                  "name": "tag.module"
                }
              ],
              "sql": "SELECT Sum(`metrics.overwritten`) AS `Sum(metrics.overwritten)`, time(time, $__interval) AS `time_$__interval`, `tag.host`, `tag.module` FROM deepflow_agent_queue WHERE `tag.host` IN ('deepflow-ce-cloud-demo-1-W2','metaflow-demo-0-V1','metaflow-demo-1-V3','metaflow-demo-2-V2','deepflow-ce-cloud-demo-0-W1') AND time>=1717429770 AND time<=1717472970 GROUP BY `time_$__interval`, `tag.host`, `tag.module` HAVING Sum(`metrics.overwritten`)>='1' ORDER BY `Sum(metrics.overwritten)` desc SLIMIT 100 LIMIT 10000"
            }
          ],
          "title": "queue.metrics.overwritten",
          "type": "timeseries"
        }
      ],
      "title": "[agent.queue] in-memory queue",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "value": "1"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "deepflowio-deepflow-datasource",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "$datasource",
        "definition": "{\"database\":\"deepflow_system\",\"sql\":\"show tag tag.host values from deepflow_server_ingester_queue\"}",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "server_host",
        "options": [],
        "query": {
          "database": "deepflow_system",
          "sql": "show tag tag.host values from deepflow_server_ingester_queue"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "$datasource",
        "definition": "{\"database\":\"deepflow_system\",\"sql\":\"show tag tag.host values from deepflow_agent_dispatcher\"}",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "agent_host",
        "options": [],
        "query": {
          "database": "deepflow_system",
          "sql": "show tag tag.host values from deepflow_agent_dispatcher"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "DeepFlow Alert Analysis",
  "uid": "DeepFlow_Alert_Analysis",
  "version": 13,
  "weekStart": ""
}